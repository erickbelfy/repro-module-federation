{"version":3,"file":"authentication-ui/assets/chunk.575.186a00681d6b3fca2af9.js","mappings":"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","sources":["webpack://authentication-ui/./node_modules/react-router-dom/node_modules/@remix-run/router/dist/router.js","webpack://authentication-ui/./node_modules/react-router-dom/node_modules/react-router/dist/index.js","webpack://authentication-ui/./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.3.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref,\n\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    createURL,\n\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, {\n        id\n      });\n\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, {\n        id,\n        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n      });\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n\n  routes.forEach((route, index) => {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\n\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`\n\n  let isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\"))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push(...restExploded);\n  } // for absolute paths, ensure `/` instead of empty segment\n\n\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  let path = originalPath;\n\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n\n  return path.replace(/^:(\\w+)(\\??)/g, (_, key, optional) => {\n    let param = params[key];\n\n    if (optional === \"?\") {\n      return param == null ? \"\" : param;\n    }\n\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n\n    return param;\n  }).replace(/\\/:(\\w+)(\\??)/g, (_, key, optional) => {\n    let param = params[key];\n\n    if (optional === \"?\") {\n      return param == null ? \"\" : \"/\" + param;\n    }\n\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n\n    return \"/\" + param;\n  }) // Remove any optional markers from optional static segments\n  .replace(/\\?/g, \"\").replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging @remix-run/router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\n\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n\n        });\n        return;\n      }\n\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    } // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n\n\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          }); // Send the same navigation through\n\n          navigate(to, opts);\n        },\n\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n\n\n    if (isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation; // Create a GET request for the loaders\n\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, router.basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace;\n\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n\n      loadingNavigation = navigation;\n    } // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n\n\n    let activeSubmission = submission ? submission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => fetchControllers.set(rf.key, pendingNavigationController));\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: href\n      }));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, {\n      routeId,\n      path,\n      match,\n      matches\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, router.basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        isFetchActionRedirect: true\n      });\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, router.basename); // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(state, redirect, _temp) {\n    var _window;\n\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an absolute external redirect that goes to a new origin\n\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\") {\n      let newOrigin = init.history.createURL(redirect.location).origin;\n\n      if (window.location.origin !== newOrigin) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n\n        return;\n      }\n    } // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    } // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n\n\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, router.basename)), ...fetchersToLoad.map(f => callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, router.basename))]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  } // Utility function to update blockers, ensuring valid state transitions\n\n\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n\n    if (blockerFunctions.size === 0) {\n      return;\n    } // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n\n\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  let basename = (opts ? opts.basename : null) || \"/\";\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n\n    if (isResponse(result)) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n\n\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"head\" && method !== \"options\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext, match);\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      var _result$activeDeferre;\n\n      let data = Object.values(result.loaderData)[0];\n\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, basename, true, isRouteRequest, requestContext);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    } // Create a GET request for the loaders\n\n\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader); // Short circuit if we have no loaders to run (query())\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, basename, true, isRouteRequest, requestContext))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Process and commit output from loaders\n\n\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n}\n\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  let submission;\n\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let defaultShouldRevalidate = // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach((f, key) => {\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      // This fetcher is not going to be present in the subsequent render so\n      // there's no need to revalidate it\n      return;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // This fetcher was cancelled from a prior action submission - force reload\n      revalidatingFetchers.push(_extends({\n        key\n      }, f));\n    } else {\n      // Revalidating fetchers are decoupled from the route matches since they\n      // hit a static href, so they _always_ check shouldRevalidate and the\n      // default is strictly if a revalidation is explicitly required (action\n      // submissions, useRevalidator, X-Remix-Revalidate).\n      let shouldRevalidate = shouldRevalidateLoader(f.match, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate\n      }));\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push(_extends({\n          key\n        }, f));\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (isResponse(result)) {\n    let status = result.status; // Process redirects\n\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\"); // Support relative routing in internal redirects\n\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(match => match.pathnameBase);\n        let resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);\n        invariant(createPath(resolvedLocation), \"Unable to resolve redirect location: \" + location); // Prepend the basename to the redirect location if we have one\n\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname = path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin absolute redirects.\n        // If this is a static reques, we can let it go back to the browser\n        // as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n\n        if (url.origin === currentUrl.origin) {\n          location = url.pathname + url.search + url.hash;\n        }\n      } // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\n\n\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  for (let match of matches) {\n    let id = match.route.id;\n\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\n\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\n\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\n\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method);\n}\n\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method);\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, warning };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"<Route>\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && match.route.errorElement) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return route;\n}\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]);\n  return blocker;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\"; // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement))), null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"An index route cannot have child routes.\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, UNSAFE_NavigationContext, useNavigate, createPath, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, ErrorResponse, invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n\n  if (isBrowser && typeof to === \"string\" && /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i.test(to)) {\n    absoluteHref = to;\n    let currentUrl = new URL(window.location.href);\n    let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n\n    if (targetUrl.origin === currentUrl.origin) {\n      // Strip the protocol/origin for same-origin absolute URLs\n      to = targetUrl.pathname + targetUrl.search + targetUrl.hash;\n    } else {\n      isExternal = true;\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative,\n    preventScrollReset\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning$1","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","ResultType","convertRoutesToDataRoutes","routes","parentPath","allIds","Set","route","treePath","id","join","children","has","add","isIndexRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","warning","_","optional","param","prefix","__","str","pattern","matcher","paramNames","regexpSource","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","async","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","createRouter","dataRoutes","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","deleteBlocker","getSavedScrollPosition","startNavigation","opts","startUninterruptedRevalidation","userMatches","createUseMatchesMatch","saveScrollPosition","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","submission","pendingActionData","pendingError","request","createClientSideRequest","findNearestBoundary","actionOutput","interruptActiveLoads","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","Request","activeSubmission","matchesToLoad","revalidatingFetchers","getMatchesToLoad","rf","fetcher","revalidatingFetcher","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","doneKeys","markFetchersDone","markFetchRedirectsDone","abortStaleFetchLoads","handleLoaders","getFetcher","_temp","_window","isFetchActionRedirect","revalidate","redirectLocation","_isFetchActionRedirect","newOrigin","redirectHistoryAction","currentMatches","fetchersToLoad","all","f","resolveDeferredResults","abortFetcher","setFetcherError","deleteFetcher","doneFetcher","landedId","yeetedKeys","updateBlocker","newBlocker","blocker","shouldBlockNavigation","currentLocation","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","initialize","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizeNavigateOptions","userReplace","fetch","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","didAbortFetchLoads","handleFetcherAction","resolveDeferredData","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","isFetcher","isSubmissionNavigation","stripHashFromPath","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","append","values","currentUrl","nextUrl","defaultShouldRevalidate","boundaryId","navigationMatches","boundaryMatches","findIndex","getLoaderMatchesUntilBoundary","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","isNewRouteInstance","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","handler","context","body","protocol","resolvedLocation","response","contentType","text","statusCode","deferred","toUpperCase","URLSearchParams","File","name","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","hasErrorBoundary","_temp4","errorMessage","isRevalidatingLoader","unwrap","resolveData","getAll","handle","pathMatches","Symbol","is","x","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","shim","getServerSnapshot","forceUpdate","useSyncExternalStore","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useHref","relative","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useNavigate","routePathnamesJson","activeRef","parse","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorElement","useRouteError","stack","preStyles","padding","backgroundColor","style","fontStyle","RenderErrorBoundary","props","super","static","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","dataRouterContext","staticContext","errorElement","_deepestRenderedBoundaryId","dataRouterState","errorIndex","reduceRight","getChildren","element","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useCurrentRouteId","useRouteContext","thisRoute","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","String","args","RouterProvider","fallbackElement","Router","Routes","MemoryRouter","historyRef","setState","Navigate","_ref3","Outlet","Route","_props","_ref4","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","_ref5","createRoutesFromChildren","Await","_ref6","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","renderError","success","_ref7","toRender","renderMatches","enhanceManualRouteObjects","routeClone","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","nextLocationPathname","isActive","isPending","ariaCurrent","Boolean","Form","FormImpl","forwardedRef","onSubmit","fetcherKey","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","UseSubmitImpl","defaultAction","encType","submissionTrigger","FormData","isButtonElement","isInputElement","form","host","getFormSubmissionInfo","fetcherId","useFetcher","_route$matches","UseFetcher","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref8","when","confirm","setTimeout"],"sourceRoot":""}