{"version":3,"file":"authentication-ui/assets/chunk.724.5961957693fb8dac6da9.js","mappings":"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","sources":["webpack://authentication-ui/./src/components/Error/Error.styled.tsx","webpack://authentication-ui/./src/components/Fields/FormField/FormField,styled.tsx","webpack://authentication-ui/./src/components/Fields/FormField/FormField.tsx","webpack://authentication-ui/./src/components/Fields/InputField/InputField.styled.tsx","webpack://authentication-ui/./src/components/Fields/InputField/InputField.tsx","webpack://authentication-ui/./src/components/Fields/InputField/dataIds.ts","webpack://authentication-ui/./src/components/Fields/PasswordField/PasswordField.styled.tsx","webpack://authentication-ui/./src/components/Fields/PasswordField/PasswordField.tsx","webpack://authentication-ui/./src/components/Fields/PasswordField/dataIds.ts","webpack://authentication-ui/./src/components/Fields/PasswordField/messages.ts","webpack://authentication-ui/./src/pages/LoginPage/LoginPage.styled.tsx","webpack://authentication-ui/./src/pages/LoginPage/LoginPage.tsx","webpack://authentication-ui/./src/pages/LoginPage/dataIds.ts","webpack://authentication-ui/./src/pages/LoginPage/messages.ts","webpack://authentication-ui/./src/pages/ResetPasswordPage/ResetPasswordPage.styled.tsx","webpack://authentication-ui/./src/pages/ResetPasswordPage/ResetPasswordPage.tsx","webpack://authentication-ui/./src/pages/ResetPasswordPage/dataIds.ts","webpack://authentication-ui/./src/pages/ResetPasswordPage/messages.ts","webpack://authentication-ui/./src/reactAdminAuth/Admin.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/Admin.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/AppBar/AppBar.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/AppBar/AppBar.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/AppBar/ApplicationBarContextMenu.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/CompanyLogo.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/CompanyLogo.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/FooterMenu.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/Layout.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/LayoutContextProvider.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/List.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/ListToolbar.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/MobileMenu.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/MobileMenu.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/Sidebar.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/Sidebar.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/Title.styled.ts","webpack://authentication-ui/./src/reactAdminAuth/Layout/Title.tsx","webpack://authentication-ui/./src/reactAdminAuth/Layout/theme.ts","webpack://authentication-ui/./src/reactAdminAuth/RaLogin.tsx","webpack://authentication-ui/./src/reactAdminAuth/RaResetPassword.tsx","webpack://authentication-ui/./src/reactAdminAuth/authProvider/authProvider.ts","webpack://authentication-ui/./src/reactAdminAuth/components/CreateFormBuilder/CreateFormBuilder.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/field/ContextMenuField/ContextMenuField.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/field/ContextMenuField/ContextMenuField.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/field/ContextMenuField/ContextMenuItemField.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/field/ContextMenuField/dataIds.ts","webpack://authentication-ui/./src/reactAdminAuth/components/input/TextInput/TextInput.styled.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/input/TextInput/TextInput.tsx","webpack://authentication-ui/./src/reactAdminAuth/components/input/TextInput/dataIds.ts","webpack://authentication-ui/./src/reactAdminAuth/dataProvider/ospDataMapper.ts","webpack://authentication-ui/./src/reactAdminAuth/dataProvider/ospDataProvider.ts","webpack://authentication-ui/./src/reactAdminAuth/dataProvider/utils.ts","webpack://authentication-ui/./src/reactAdminAuth/i18nProvider/ospI18nProvider.ts","webpack://authentication-ui/./src/reactAdminAuth/services.ts","webpack://authentication-ui/./src/shared/constants.ts"],"sourcesContent":["import { styled, Paper } from '@mui/material';\n\nexport const StyledErrorContainer = styled('div')({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nexport const StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 400,\n  display: 'flex',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  height: 'fit-content',\n  padding: theme.spacing(3),\n}));\n","import { styled, TextField } from '@mui/material';\n\nexport const OssUiFormField = styled(TextField)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n","import React from 'react';\nimport { OssUiFormField } from './FormField,styled';\n\nconst FormField = ({ errorMessage, helperMessage = '', label, children, ...props }) => {\n  return (\n    <OssUiFormField id={label} fullWidth {...props}>\n      {children}\n    </OssUiFormField>\n  );\n};\n\nexport default FormField;\n","import { styled, TextField } from '@mui/material';\n\nexport const StyledTextInput = styled(TextField)({\n  borderRadius: '3px',\n  '.MuiInputBase-input': {\n    padding: '6px 8px 7px',\n  },\n});\n","import React, { forwardRef } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { FormField } from '../FormField';\nimport dataIds from './dataIds';\nimport type { InputFieldProps } from './types';\nimport { MAX_LENGTH } from '../../../shared/constants';\nimport { StyledTextInput } from './InputField.styled';\n\nexport const InputField = forwardRef<HTMLInputElement, InputFieldProps>(\n  (\n    { testId, maxLength = MAX_LENGTH, errorMessage, helperMessage, label, inputProps, ...props },\n    ref\n  ) => {\n    return (\n      <FormField errorMessage={errorMessage} helperMessage={helperMessage} label={label}>\n        <StyledTextInput\n          slotProps={undefined}\n          slots={undefined}\n          inputRef={ref}\n          autoComplete=\"off\"\n          status={errorMessage ? 'error' : null}\n          inputProps={{\n            'data-testid': testId || dataIds.InputField.id,\n            maxLength,\n            ...inputProps,\n          }}\n          {...props}\n        />\n      </FormField>\n    );\n  }\n);\n\nexport const ControlledInputField = forwardRef<HTMLInputElement, InputFieldProps>(\n  ({ name, errorMessage = '', ...props }, ref) => {\n    const { control } = useFormContext();\n    return (\n      <Controller\n        name={name}\n        control={control}\n        render={({ field: { onBlur, onChange }, fieldState: { error, isTouched } }) => {\n          return (\n            <InputField\n              onBlur={onBlur}\n              onChange={onChange}\n              name={name}\n              ref={ref}\n              errorMessage={(isTouched && error?.message ? error.message : '') || errorMessage}\n              {...props}\n            />\n          );\n        }}\n      />\n    );\n  }\n);\n\nexport default ControlledInputField;\n","export default {\n  InputField: {\n    id: 'InputField',\n  },\n};\n","import { styled, IconButton } from '@mui/material';\n\nexport const StyledIconButton = styled(IconButton)({\n  '&:hover': {\n    backgroundColor: 'transparent',\n  },\n});\n","import { InputAdornment } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport dataIds from './dataIds';\nimport type { InputFieldProps } from '../InputField/types';\nimport { MAX_LENGTH_PASSWORD } from '../../../shared/constants';\nimport { InputField } from '../InputField';\nimport messages from './messages';\nimport { StyledIconButton } from './PasswordField.styled';\n\nconst ControlledPasswordField = ({\n  name,\n  testId = dataIds.PasswordField.id,\n  maxLength = MAX_LENGTH_PASSWORD,\n  ...props\n}: InputFieldProps) => {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { formatMessage } = useIntl();\n  const { control } = useFormContext();\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field: { onBlur, onChange }, fieldState: { error, isTouched } }) => {\n        return (\n          <InputField\n            name={name}\n            onBlur={onBlur}\n            onChange={onChange}\n            testId={testId}\n            maxLength={maxLength}\n            autoComplete=\"password\"\n            type={isVisible ? 'text' : 'password'}\n            errorMessage={isTouched && error?.message ? error.message : ''}\n            endAdornment={\n              <InputAdornment position=\"start\">\n                <StyledIconButton\n                  disableFocusRipple\n                  disableRipple\n                  disableTouchRipple\n                  onClick={() => setIsVisible(!isVisible)}\n                  data-testid={dataIds.PasswordField.FieldIconButton.id}\n                  aria-label={\n                    isVisible\n                      ? formatMessage(messages.passwordVisibleAriaLabel)\n                      : formatMessage(messages.passwordHiddenAriaLabel)\n                  }\n                >\n                  {isVisible ? (\n                    <VisibilityOff data-testid={`${testId}-hide`} />\n                  ) : (\n                    <Visibility data-testid={`${testId}-show`} />\n                  )}\n                </StyledIconButton>\n              </InputAdornment>\n            }\n            {...props}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ControlledPasswordField;\n","export default {\n  PasswordField: {\n    id: 'PasswordField',\n    FieldIconButton: {\n      id: 'PasswordFieldIconButton',\n    },\n  },\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  passwordVisibleAriaLabel: {\n    id: 'login.form.password.visible.ariaLabel',\n    defaultMessage: 'Password is visible, press to hide',\n  },\n  passwordHiddenAriaLabel: {\n    id: 'login.form.password.hidden.ariaLabel',\n    defaultMessage: 'Password is hidden, press to show',\n  },\n});\n","import { styled, Paper, Typography, Box, Button as ButtonProgress } from '@mui/material';\n\nexport const StyledPaper = styled(Paper)(({ theme }) => ({\n  margin: theme.spacing(5),\n  [theme.breakpoints.up('sm')]: {\n    width: 512,\n  },\n}));\n\nexport const FormContainer = styled('div')(({ theme }) => ({\n  padding: theme.spacing(2.5),\n}));\n\nexport const StyledTypography = styled(Typography)(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: 600,\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n}));\n\nexport const StyledBox = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2.5),\n  textTransform: 'none',\n}));\n\nexport const StyledButtonProgress = styled(ButtonProgress)(({ theme }) => ({\n  margin: theme.spacing(0.3),\n}));\n","// eslint-disable-next-line import/extensions\nimport { Divider, Box, Button  } from '@mui/material';\nimport React, { useState } from 'react';\nimport { FormProvider, useForm, useFormContext } from 'react-hook-form';\nimport { StatusCodes } from 'http-status-codes';\nimport { useIntl } from 'react-intl';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { useRedirect } from 'react-admin';\nimport { defaultValues, errorCodes } from '../../shared/constants';\nimport dataIds from './dataIds';\nimport messages from './messages';\nimport type { FormValues } from './types';\nimport { InputField, PasswordField } from '../../components';\n\n// style components\nimport {\n  StyledPaper,\n  FormContainer,\n  StyledTypography,\n  StyledBox,\n  StyledButtonProgress,\n} from './LoginPage.styled';\n\nconst LoginForm = ({ onLogin }) => {\n  const redirect = useRedirect();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { formatMessage } = useIntl();\n  const {\n    formState: { isValid },\n    getValues,\n  } = useFormContext<FormValues>();\n\n  const handleClick = (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    const [emailAddressInput, password] = getValues(['emailAddress', 'password']);\n    const emailAddress = emailAddressInput.toLowerCase();\n    onLogin({ emailAddress, password })\n      .catch((e) => {\n        const { errorCode, status } = e;\n        if (errorCode === errorCodes.VALIDATION_FAILED_NEW_PASSWORD_MISSING) {\n          redirect('/reset-password', null, null, null, {\n            emailAddress,\n            password,\n          });\n        } else if (status === StatusCodes.CONFLICT) {\n          // TODO user is locked or disabled, redirect / link\n          setError(formatMessage(messages.accountLocked));\n        } else if (\n          status === StatusCodes.UNAUTHORIZED ||\n          status === StatusCodes.NOT_FOUND ||\n          status === StatusCodes.BAD_REQUEST\n        ) {\n          setError(formatMessage(messages.invalidLogin));\n        } else {\n          setError(e.message);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return (\n    <Box\n      display=\"flex\"\n      flex={1}\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      data-testid={dataIds.LoginPage.id}\n      component=\"section\"\n    >\n      <StyledPaper>\n        <form>\n          <FormContainer>\n            <StyledTypography color=\"textPrimary\" component=\"h1\">\n              {formatMessage(messages.title)}\n            </StyledTypography>\n            <InputField\n              name=\"emailAddress\"\n              label={formatMessage(messages.emailAddress)}\n              testId={dataIds.LoginPage.email.id}\n              autoComplete=\"username\"\n            />\n            <PasswordField\n              name=\"password\"\n              label={formatMessage(messages.password)}\n              testId={dataIds.LoginPage.password.id}\n            />\n          </FormContainer>\n          <Divider />\n          <StyledBox display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button\n              data-testid={dataIds.LoginPage.submitButton.id}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!isValid || loading}\n              {...(!loading && { startIcon: <LoginIcon /> })}\n              onClick={handleClick}\n            >\n              {loading ? <StyledButtonProgress /> : formatMessage(messages.login)}\n            </Button>\n          </StyledBox>\n        </form>\n      </StyledPaper>\n    </Box>\n  );\n};\n\nconst LoginPage = ({ onLogin }) => {\n  const methods = useForm<FormValues>({\n    defaultValues,\n    mode: 'onChange',\n  });\n\n  return (\n    <FormProvider {...methods}>\n      <LoginForm onLogin={onLogin} />\n    </FormProvider>\n  );\n};\n\nexport default LoginPage;\n","export default {\n  LoginPage: {\n    id: 'LoginPage',\n    email: {\n      id: 'emailAddress',\n    },\n    password: {\n      id: 'password',\n    },\n    submitButton: {\n      id: 'LoginPageSubmitButton',\n    },\n    authError: {\n      id: 'LoginPageAuthError',\n    },\n  },\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    defaultMessage: 'Log in',\n    id: 'login.form.title',\n  },\n  isRequired: {\n    defaultMessage: '{field} is a required field',\n    id: 'login.form.isRequired',\n  },\n  minCharacters: {\n    defaultMessage: '{field} must be at least {number} characters',\n    id: 'login.form.minCharacters',\n  },\n  emailAddress: {\n    defaultMessage: 'Email',\n    id: 'login.form.emailAddress',\n  },\n  emailAddressError: {\n    defaultMessage: 'Email must be a valid email',\n    id: 'login.form.emailAddressError',\n  },\n  password: {\n    defaultMessage: 'Password',\n    id: 'login.form.password',\n  },\n  passwordError: {\n    defaultMessage:\n      'Password should have at least {minLengthPassword} characters, at least one uppercase letter, one lowercase letter, one number and a special character',\n    id: 'login.form.passwordError',\n  },\n  login: {\n    defaultMessage: 'Log in',\n    id: 'login.form.button.text',\n  },\n  forgotPassword: {\n    defaultMessage: 'Forgot password?',\n    id: 'login.form.forgotPassword',\n  },\n  accountLocked: {\n    defaultMessage:\n      'Your account has been locked or disabled. Please contact support to resolve this, then try again.',\n    id: 'login.form.accountLocked',\n  },\n  invalidLogin: {\n    defaultMessage: 'The user id and password you entered is invalid.',\n    id: 'login.form.invalidLogin',\n  },\n  internalError: {\n    defaultMessage: 'An internal error occurred.',\n    id: 'login.form.internalError',\n  },\n});\n","import { styled, Paper ,Typography, Button as ButtonProgress, Box } from '@mui/material';\n\nexport const StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2.5),\n  margin: theme.spacing(5),\n  [theme.breakpoints.up('sm')]: {\n    width: 512,\n  },\n}));\n\nexport const StyledTypography = styled(Typography)(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: 600,\n  marginBottom: theme.spacing(2),\n}));\n\nexport const StyledButtonProgress = styled(ButtonProgress)(({ theme }) => ({\n  margin: theme.spacing(0.3),\n}));\n\nexport const StyledBox = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(3),\n  textTransform: 'none',\n}));\n","// eslint-disable-next-line import/extensions\nimport { Box, Button, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FormProvider, useForm, useFormContext } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { Save } from '@mui/icons-material';\nimport { useRedirect } from 'react-admin';\nimport { PasswordField } from '../../components/Fields';\nimport dataIds from './dataIds';\nimport messages from './messages';\nimport type { FormValues } from './types';\nimport {\n  StyledPaper,\n  StyledTypography,\n  StyledButtonProgress,\n  StyledBox,\n} from './ResetPasswordPage.styled';\n\nconst ResetPasswordPage = ({ onLogin }) => {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { formatMessage } = useIntl();\n  const [loading, setLoading] = useState(false);\n  const [authError, setAuthError] = useState({\n    message: undefined,\n  });\n  const location = useLocation();\n  const redirect = useRedirect();\n  const {\n    getValues,\n    formState: { isValid },\n  } = useFormContext();\n  const onResetPassword = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const [confirmPassword, staticPassword] = getValues(['confirmPassword', 'staticPassword']);\n    onLogin({ staticPassword })\n      .then(() => {\n        if (!!confirmPassword && window.location.pathname.includes('dashboard')) {\n          redirect('/complete-profile');\n        }\n      })\n      .catch((error) => {\n        setAuthError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return (\n    <Box\n      display=\"flex\"\n      flex={1}\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      data-testid={dataIds.ResetPasswordPage.id}\n      component=\"section\"\n    >\n      <StyledPaper>\n        <Box sx={{ marginBottom: 2 }}>\n        </Box>\n        <form>\n          <StyledTypography color=\"textPrimary\">{formatMessage(messages.title)}</StyledTypography>\n          {/* Ensure browser password managers associate new password with email address */}\n          <input type=\"hidden\" name=\"emailAddress\" value={location.state.emailAddress} readOnly />\n          <PasswordField\n            name=\"staticPassword\"\n            label={formatMessage(messages.newPassword)}\n            testId={dataIds.ResetPasswordPage.newPassword.id}\n            autoComplete=\"new-password\"\n          />\n          <PasswordField\n            name=\"confirmPassword\"\n            label={formatMessage(messages.confirmPassword)}\n            testId={dataIds.ResetPasswordPage.confirmPassword.id}\n            autoComplete=\"new-password\"\n          />\n          <StyledBox display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button\n              data-testid={dataIds.ResetPasswordPage.submitButton.id}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!isValid || loading}\n              {...(!loading && { startIcon: <Save /> })}\n              onClick={onResetPassword}\n            >\n              {loading ? <StyledButtonProgress /> : formatMessage(messages.resetPasswordButton)}\n            </Button>\n          </StyledBox>\n        </form>\n      </StyledPaper>\n      {authError?.message && (\n        <Typography color=\"error\" data-testid={dataIds.ResetPasswordPage.authError.id}>\n          {authError?.message}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nconst ResetPasswordForm = ({ onLogin }) => {\n\n  const methods = useForm<FormValues>({\n    mode: 'onChange',\n  });\n\n  return (\n    <FormProvider {...methods}>\n      <ResetPasswordPage onLogin={onLogin} />\n    </FormProvider>\n  );\n};\n\nexport default ResetPasswordForm;\n","export default {\n  ResetPasswordPage: {\n    id: 'ResetPasswordPage',\n    newPassword: {\n      id: 'newPassword',\n    },\n    confirmPassword: {\n      id: 'confirmPassword',\n    },\n    submitButton: {\n      id: 'ResetPasswordPageSubmitButton',\n    },\n    authError: {\n      id: 'ResetPasswordPageAuthError',\n    },\n  },\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    defaultMessage: 'Reset your password',\n    id: 'resetPassword.form.title',\n  },\n  isRequired: {\n    defaultMessage: '{field} is a required field',\n    id: 'resetPassword.form.isRequired',\n  },\n  minCharacters: {\n    defaultMessage: '{field} must be at least {number} characters',\n    id: 'resetPassword.form.minCharacters',\n  },\n  newPassword: {\n    defaultMessage: 'New password',\n    id: 'resetPassword.form.newPassword',\n  },\n  confirmPassword: {\n    defaultMessage: 'Confirm password',\n    id: 'resetPassword.form.confirmPassword',\n  },\n  doNotMatch: {\n    defaultMessage: 'Passwords do not match',\n    id: 'resetPassword.form.doNotMatch',\n  },\n  passwordError: {\n    defaultMessage:\n      'Password should have at least {minLengthPassword} characters, at least one uppercase letter, one lowercase letter, one number and a special character',\n    id: 'resetPassword.form.passwordError',\n  },\n  resetPasswordButton: {\n    defaultMessage: 'Reset password',\n    id: 'resetPassword.form.button.text',\n  },\n});\n","import React from 'react';\nimport { styled, GlobalStyles } from '@mui/material';\n\nexport const StyledRoot = styled('div')(() => ({\n  height: '100%',\n}));\n\nexport const StyledMain = styled('main')(({ theme }) => {\n  return {\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    backgroundColor: theme.palette.background.default,\n    flexDirection: 'column',\n  };\n});\n\nexport const inputGlobalStyles = (\n  <GlobalStyles\n    styles={{\n      'html, body, #root': {\n        textSizeAdjust: 'none',\n        width: '100%',\n        height: '100%',\n      },\n    }}\n  />\n);\n","import { CssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport { Admin } from 'react-admin';\nimport { BrowserRouter } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport { useAuthProvider } from './authProvider';\nimport { RALogin as OSRaLogin } from './RaLogin';\nimport {\n  PlatformLayout as OSRaLayout,\n  theme as defaultTheme,\n  LayoutProvider,\n} from './Layout';\nimport type {\n  ContextProvidersProps,\n  OSAdminProps,\n  OSAdminContextProps,\n  OSThemeProviderProps,\n} from './types';\nimport { StyledRoot, StyledMain, inputGlobalStyles } from './Admin.styled';\nimport { createOspI18nProvider } from './i18nProvider';\n\n/**\n * Theme provider that wraps components outside React admin scopes\n * @param {ThemeOptions} theme @onespan/component theme object\n * @param {ReactNode} children react children\n */\n\nexport const OSThemeProvider = ({ children, theme }: OSThemeProviderProps) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {inputGlobalStyles}\n      <StyledRoot>\n        <StyledMain>{children}</StyledMain>\n      </StyledRoot>\n    </ThemeProvider>\n  );\n};\n\n/**\n *\n * Contexts Required for platform, probably some of them will be\n * deprecated as we develop the Onespan Design System components\n *\n * @param {ReactNode} children\n * @param {String} basename\n * @param {Object} messages\n * @param {String} name\n * @param {String} locale\n * @param {JSX.Element} AppLogo\n * @param {Boolean} isPlatformEKS delegate what cluster this application resides\n */\nexport const ContextProviders = ({\n  children,\n  basename,\n  messages,\n  name,\n  locale,\n  AppLogo,\n  externalCluster,\n}: ContextProvidersProps) => {\n  return (\n    <BrowserRouter basename={basename}>\n      <IntlProvider locale={locale} messages={messages}>\n        <LayoutProvider name={name} AppLogo={AppLogo}>\n          {children}\n        </LayoutProvider>\n      </IntlProvider>\n    </BrowserRouter>\n  );\n};\n\n/**\n * Onespan React admin provider\n * @param {ThemeOptions} theme @onespan/component theme object\n * @param {string} apiUrl url to fetch resources from an api context\n * @param {ReactNode} children react children\n * @param {AdminProps} props react-admin props\n * @param {SVG} LogoIcon Icon that will be displayed in the app bar\n * @param {string} appName Friendly application name\n * @param {DataProvider} dataProvider\n */\nexport const AdminContext = ({\n  theme,\n  apiUrl,\n  children,\n  name,\n  dataProvider,\n  i18nProvider,\n  messages = {},\n  locale = 'en',\n  dashboard,\n  layout,\n  externalCluster = false,\n  requireAuth = true,\n  ...props\n}: OSAdminContextProps) => {\n  const { authProvider, dataProvider: defaultDataProvider } = useAuthProvider({\n    apiUrl,\n    externalCluster,\n  });\n  const defaultI18nProvider = createOspI18nProvider(locale, messages);\n  return (\n    <Admin\n      dataProvider={dataProvider || defaultDataProvider}\n      i18nProvider={i18nProvider || defaultI18nProvider}\n      loginPage={OSRaLogin}\n      layout={layout || OSRaLayout}\n      authProvider={authProvider}\n      requireAuth={requireAuth}\n      theme={theme}\n      title={name}\n      dashboard={dashboard}\n      {...props}\n    >\n      {children}\n    </Admin>\n  );\n};\n\n/**\n * Admin Wrapper that contains all providers needed for basic functionality\n *\n * @param {string} basename define if your project needs to start from a sub path e.g (/admin)\n * @param {Object} messages react intl translation strings\n * @param {Object} reactIntl\n * @param {string} locale initial state for your locale\n * @param {OSAdminContextProps} adminProps react-admin props\n * @param {ReactNode} children resources\n * @param {string} name application name, needed to create session storage items\n * @param {string} apiUrl base path of your api calls\n * @param {ThemeOptions}theme onespan components theme\n * @param {SVG} AppLogo Application icon that appears in the appBar\n * @param {Boolean} isPlatformEKS Delegate what cluster the app resides\n * @param {DataProvider} dataProvider create a custom provider\n * @param {I18nProvider} i18nProvider create a custom i18n provider\n */\nexport const OSAdmin = ({\n  children,\n  messages,\n  basename = '',\n  externalCluster = false,\n  requireAuth = true,\n  locale = 'en',\n  adminProps = {},\n  name = 'Onespan',\n  apiUrl = '',\n  theme = defaultTheme,\n  /** @deprecated needed for current react intl implementation. To be deprecated it soon */\n  reactIntl = {},\n  // @fixme logo types are not working properly, revisit it later\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  AppLogo = Logo,\n  dataProvider,\n  i18nProvider,\n  layout,\n  dashboard,\n}: OSAdminProps) => {\n  return (\n    <ContextProviders\n      name={name}\n      AppLogo={AppLogo}\n      locale={locale}\n      basename={basename}\n      messages={reactIntl}\n      externalCluster={externalCluster}\n    >\n      <OSThemeProvider theme={theme}>\n        <AdminContext\n          messages={messages}\n          locale={locale}\n          theme={theme}\n          apiUrl={apiUrl}\n          name={name}\n          dataProvider={dataProvider}\n          i18nProvider={i18nProvider}\n          dashboard={dashboard}\n          layout={layout}\n          externalCluster={externalCluster}\n          requireAuth={requireAuth}\n          {...adminProps}\n        >\n          {children}\n        </AdminContext>\n      </OSThemeProvider>\n    </ContextProviders>\n  );\n};\n","import { AppBar, MenuItem, styled, Toolbar, Box, TextField as TextInput } from '@mui/material';\n\nexport const StyledAppBar = styled(AppBar)(({ theme }) => ({\n  '&.MuiAppBar-colorPrimary': {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.text.primary,\n    borderBottom: `solid 1px ${theme.palette.grey.A200}`,\n  },\n}));\n\nexport const StyledBox = styled(Box)(({ theme }) => ({\n  '&.MuiBox-root > *': {\n    marginLeft: theme.spacing(1),\n    height: theme.spacing(5.5),\n    boxShadow: 'none',\n  },\n}));\n\nexport const StyledPortalAdminTitle = styled('div')(() => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n}));\n\nexport const StyledTextInput = styled(TextInput)(({ theme }) => ({\n  '&.MuiInputBase-root': {\n    minWidth: 320,\n    borderColor: theme.palette.grey[400],\n    '&:hover': {\n      boxShadow: 'initial',\n      '&:not(.Mui-focused)': {\n        backgroundColor: theme.palette.grey[200],\n      },\n    },\n    '&.Mui-focused': {\n      outline: `1px solid ${theme.palette.primary.main}`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nexport const StyledContentBox = styled(Box)(() => ({\n  flexGrow: 1,\n  display: 'flex',\n  alignItems: 'center',\n  '& .MuiSvgIcon-root': { cursor: 'pointer' },\n}));\n\nexport const StyledLogoAndTitleSection = styled(Box)(() => ({\n  flexGrow: 1,\n  display: 'flex',\n  alignItems: 'center',\n}));\n\nexport const StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  minHeight: theme.spacing(5.5),\n}));\n\nexport const StyledToolbar = styled(Toolbar)(({ theme }) => ({\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: 0,\n  },\n  paddingLeft: 0,\n  position: 'inherit',\n  justifyContent: 'space-between',\n}));\n","import React, { Children } from 'react';\nimport { Theme, useMediaQuery } from '@mui/material';\nimport {\n  StyledAppBar,\n  StyledContentBox,\n  StyledPortalAdminTitle,\n  StyledToolbar,\n  StyledLogoAndTitleSection,\n} from './AppBar.styled';\nimport { CompanyLogo } from '../CompanyLogo';\nimport { MobileMenu } from '../MobileMenu';\nimport type { ApplicationBarProps } from './types';\n\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {ReactNode} children React node/s to be rendered as children of the AppBar\n *\n * @example\n *\n * const MyAppBar = props => {\n *   return (\n *       <AppBar {...props}>\n *           <CustomBaseTitle\n *               variant=\"h6\"\n *               color=\"inherit\"\n *               className={classes.title}\n *           />\n *       </AppBar>\n *   );\n *};\n *\n * @example Template AppBar\n *\n * const MyAppBar = props => {\n *   return (\n *       <AppBar {...props} />\n *   );\n *};\n *\n * @todo add css classes customizations for toolbar and main container\n */\n\nexport const AppBar = ({ children }: ApplicationBarProps) => {\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('sm'));\n\n  return (\n    <StyledAppBar position=\"static\">\n      <StyledToolbar>\n        <StyledContentBox>\n          {Children.count(children) === 0 ? (\n            <>\n              <StyledLogoAndTitleSection>\n                {isSmall ? <MobileMenu /> : <CompanyLogo />}\n                <StyledPortalAdminTitle id=\"portal-admin-title\" />\n              </StyledLogoAndTitleSection>\n              <div id=\"portal-admin-actions\" />\n            </>\n          ) : (\n            children\n          )}\n        </StyledContentBox>\n      </StyledToolbar>\n    </StyledAppBar>\n  );\n};\n","/* eslint-disable */\nimport React, { forwardRef, useCallback, useState } from 'react';\nimport { Menu, ListItemIcon, ListItemText, Button } from '@mui/material';\nimport { MoreVert } from '@mui/icons-material';\nimport type { ContextMenu } from './types';\nimport { StyledMenuItem } from './AppBar.styled'\n\nexport const ApplicationBarContextMenu = (props: ContextMenu) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = useCallback((event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        onClick={handleClick}\n        role=\"context-menu\"\n        startIcon={<MoreVert />}\n        variant=\"outlined\"\n      />\n\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        open={!!anchorEl}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          variant: 'outlined',\n          sx: { paddingTop: 1, paddingBottom:1, width: 230 }\n        }}\n\n        transformOrigin={{ horizontal: 230, vertical: 'top' }}\n      >\n          <MenuItems\n            options={props.options }\n          />\n      </Menu>\n    </>\n  );\n};\n\nconst MenuItems = forwardRef(\n  ({ options }: ContextMenu, _) => {\n    return (\n      <>\n        {options.map(({label, icon, ...menuItemProps}, idx) => (\n          <StyledMenuItem\n            key={`${label}-${idx}`}\n            {...menuItemProps}\n          >\n            {icon && (<ListItemIcon>{icon}</ListItemIcon>)}\n            <ListItemText>{label}</ListItemText>\n          </StyledMenuItem>\n        ))}\n      </>\n    );\n  }\n);\n","import { styled, Box, Typography } from '@mui/material';\n\nexport const StyledLogoWrapper = styled(Box)(() => ({\n  width: 42,\n  height: 40,\n}));\nexport const StyledApplicationName = styled(Typography)(({ theme }) => ({\n  marginLeft: theme.spacing(2),\n  color: theme.palette.primary.main,\n  fontWeight: 800,\n}));\n\nexport const StyledLogoContainer = styled(Box)(({ theme }) => {\n  return {\n    backgroundColor: theme.palette.primary.light,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginRight: theme.spacing(2.5),\n    paddingLeft: theme.spacing(1.3),\n    paddingRight: theme.spacing(2),\n    borderRight: `solid 1px ${theme.palette.grey.A200}`,\n    zIndex: theme.zIndex.drawer,\n\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(1.3),\n      paddingRight: theme.spacing(1.3),\n    },\n\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  };\n});\n","import React, { useContext } from 'react';\nimport { useStore } from 'react-admin';\nimport { LayoutContext } from './LayoutContextProvider';\nimport {\n  StyledLogoWrapper,\n  StyledApplicationName,\n  StyledLogoContainer,\n} from './CompanyLogo.styled';\n\nimport { DRAWER_WIDTH_COLLAPSED, DRAWER_WIDTH_EXPANDED } from './Sidebar.styled';\n\nexport const CompanyLogo = () => {\n  const [isSidebarOpen] = useStore('ui.sidebar');\n  const { name, AppLogo } = useContext(LayoutContext);\n\n  return (\n    <StyledLogoContainer\n      sx={{\n        width: isSidebarOpen ? DRAWER_WIDTH_EXPANDED - 1 : DRAWER_WIDTH_COLLAPSED,\n        marginRight: { xs: 0, sm: 2.5 },\n      }}\n    >\n      <StyledLogoWrapper>\n        <AppLogo />\n      </StyledLogoWrapper>\n      {isSidebarOpen && <StyledApplicationName>{name}</StyledApplicationName>}\n    </StyledLogoContainer>\n  );\n};\n","/* eslint-disable react/require-default-props,@typescript-eslint/no-use-before-define */\nimport React from 'react';\nimport { MenuList, MenuItem as MuiMenuItem, ListItemIcon } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { UserMenu as RAUserMenu, useStore, useTranslate } from 'react-admin';\nimport type { MenuItemLinkProps } from './types';\n\ntype FooterMenuProps = {\n  children: React.ReactNode;\n};\nconst FooterMenu = ({ children }: FooterMenuProps) => {\n  return <MenuList>{children}</MenuList>;\n};\n\nconst MenuItem = ({ to = null, primaryText, leftIcon, ...rest }: MenuItemLinkProps) => {\n  const translate = useTranslate();\n  const [open] = useStore('ui.sidebar');\n  const linkProps = to\n    ? {\n        to,\n        component: Link,\n      }\n    : {};\n  const renderItem =\n    typeof primaryText === 'string' ? translate(primaryText, { _: primaryText }) : primaryText;\n  return (\n    <MuiMenuItem {...rest} {...linkProps}>\n      {leftIcon && <ListItemIcon>{leftIcon}</ListItemIcon>}\n      {open ? renderItem : null}\n    </MuiMenuItem>\n  );\n};\n\nFooterMenu.Item = MenuItem;\n\nconst DefaultFooterMenu = () => (\n  <FooterMenu>\n    {/* @todo translate me */}\n    <FooterMenu.Item leftIcon={<RAUserMenu />} primaryText=\"Me\" />\n  </FooterMenu>\n);\n\nexport { FooterMenu, DefaultFooterMenu };\n","import React from 'react';\nimport { Layout, LayoutProps } from 'react-admin';\nimport { AppBar as OSRaAppBar } from './AppBar';\nimport OSRaSidebar from './Sidebar';\n\ntype PlatformLayoutProps = LayoutProps;\n/*\n * Layout\n * @ Todo allow users to customize their own appbar and pass it as a prop\n * */\nexport const PlatformLayout = (props: PlatformLayoutProps) => {\n  return (\n    <Layout\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      appBar={OSRaAppBar}\n      sidebar={OSRaSidebar}\n      sx={{\n        '& .RaLayout-appFrame': { marginTop: 0 },\n        '& .RaLayout-content': {\n          paddingTop: 2.5,\n          paddingLeft: 2.5,\n          paddingRight: 2.5,\n          overflowY: 'auto',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React, { createContext, ReactNode, useMemo } from 'react';\n\nexport const LayoutContext = createContext<{\n  name: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  AppLogo: any;\n}>({\n  name: 'Onespan',\n  AppLogo: <p>test</p>,\n});\nexport const LayoutProvider = ({\n  children,\n  name,\n  AppLogo,\n}: {\n  children: ReactNode;\n  name: string;\n  AppLogo: JSX.Element;\n}) => {\n  return useMemo(\n    () => <LayoutContext.Provider value={{ name, AppLogo }}>{children}</LayoutContext.Provider>,\n    [AppLogo, children, name]\n  );\n};\n","import React from 'react';\nimport { ListBase, useGetResourceLabel, ListView, RaRecord, useResourceContext } from 'react-admin';\nimport { Title } from './Title';\nimport { ListToolbar } from './ListToolbar';\nimport type { ListProps } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const List = <RecordType extends RaRecord = any>({\n  title,\n  actionButtons,\n  contextMenu,\n  debounce,\n  disableAuthentication,\n  disableSyncWithLocation,\n  exporter,\n  filter,\n  filterDefaultValues,\n  perPage,\n  queryOptions,\n  sort,\n  storeKey,\n  ...rest\n}: ListProps) => {\n  const resource = useResourceContext();\n  const getResourceLabel = useGetResourceLabel();\n  const defaultTitle = title ?? getResourceLabel(resource, 2);\n  return (\n    <ListBase<RecordType>\n      debounce={debounce}\n      disableAuthentication={disableAuthentication}\n      disableSyncWithLocation={disableSyncWithLocation}\n      exporter={exporter}\n      filter={filter}\n      filterDefaultValues={filterDefaultValues}\n      perPage={perPage}\n      queryOptions={queryOptions}\n      resource={resource}\n      sort={sort}\n      storeKey={storeKey}\n    >\n      <Title title={defaultTitle} />\n      <ListToolbar actionButtons={actionButtons} contextMenu={contextMenu} />\n      <ListView {...rest} />\n    </ListBase>\n  );\n};\n","/* eslint-disable react/no-array-index-key */\nimport { Search } from '@mui/icons-material';\nimport React, { useEffect, useState, forwardRef } from 'react';\n\nimport { Button } from '@mui/material';\nimport { createPortal } from 'react-dom';\nimport { isArray } from 'lodash';\nimport { StyledBox, StyledTextInput, ApplicationBarContextMenu } from './AppBar';\nimport type { ActionContentProps } from './AppBar';\n\n/**\n * The Title component allows users to configure the Appbar options.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {Object} props.inputProps Input props for searching criteria\n * @param {Object} props.contextMenu Context menu options\n * @param {String | ReactNode} props.title title of the page\n * @param {Function} props.clickIconHandler in case you have an icon you can assign an action\n * @param {Boolean} props.mode To de defined if we need this or not.\n * @param {Array[MUIButton]} props.actionButtons List of MUI Buttons.\n *\n * @example\n *\n * const MyPage = props => {\n *   return (\n      <ListToolbar\n        actionButtons={[\n          { label: 'action1', onClick: someHandler, color: 'primary', variant: 'contained' },\n          { label: 'action2', onClick: someHandler, color: 'primary', variant: 'outlined' },\n        ]}\n        contextMenu={{\n          options: [\n            { label: 'menu1', icon: <AbcSharp />, onClick: () => console.log('Action 1') },\n            {\n              label: 'menu2',\n              icon: <Delete />,\n              onClick: () => console.log('Action 2'),\n              divider: true,\n            },\n            { label: 'menu3', icon: <LockSharp />, onClick: () => console.log('Action 3') },\n          ],\n        }}\n      />\n *   );\n *};\n *\n */\n\nexport const ListToolbar = forwardRef(\n  ({ inputProps, actionButtons, contextMenu }: ActionContentProps, ref) => {\n    const { className: inputClass } = inputProps || {};\n    const [container, setContainer] = useState<HTMLElement | null>(null);\n\n    useEffect(() => {\n      const portal = document.getElementById('portal-admin-actions');\n      if (portal) {\n        setContainer(portal);\n      }\n    }, []);\n\n    if (!container) return null;\n\n    return createPortal(\n      <StyledBox ref={ref} display=\"flex\" alignItems=\"center\" id=\"platform-admin-appbar-actions\">\n        {inputProps && (\n          <StyledTextInput\n            slotProps={undefined}\n            slots={undefined}\n            className={inputClass}\n            inputProps={{\n              'data-testid': 'search-input',\n              ...inputProps.inputProps,\n            }}\n            startAdornment={<Search />}\n            {...inputProps}\n          />\n        )}\n        {isArray(actionButtons) &&\n          actionButtons.map(({ label, ...buttonProps }, idx) => (\n            <Button key={`${label}-${idx}`} {...buttonProps}>\n              {label}\n            </Button>\n          ))}\n        {React.isValidElement(actionButtons) && actionButtons}\n        {contextMenu && <ApplicationBarContextMenu {...contextMenu} />}\n      </StyledBox>,\n      container\n    );\n  }\n);\n","import { styled, IconButton } from '@mui/material';\n\nexport const StyledIconButton = styled(IconButton)(({ theme }) => {\n  return {\n    [theme.breakpoints.down('sm')]: {\n      backgroundColor: 'transparent',\n    },\n    backgroundColor: theme.palette.primary.dark,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  };\n});\n","import React from 'react';\nimport { useStore } from 'react-admin';\nimport { Menu } from '@mui/icons-material';\nimport { StyledIconButton } from './MobileMenu.styled';\nimport { StyledLogoContainer } from './CompanyLogo.styled';\n\nexport const MobileMenu = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useStore('ui.sidebar');\n  const handleLeftDrawerOpen = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  return (\n    <StyledLogoContainer\n      sx={{\n        backgroundColor: { xs: 'transparent' },\n      }}\n    >\n      <StyledIconButton aria-label=\"open drawer\" onClick={handleLeftDrawerOpen}>\n        <Menu />\n      </StyledIconButton>\n    </StyledLogoContainer>\n  );\n};\n","import { Backdrop, Button, styled } from '@mui/material';\n\nexport const DRAWER_WIDTH_COLLAPSED = 64;\nexport const DRAWER_WIDTH_EXPANDED = 360;\n\nexport const StyledBackdrop = styled(Backdrop)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer - 1,\n}));\n\nexport const StyledMenuContainer = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  [theme.breakpoints.down('sm')]: {\n    height: 'auto',\n  },\n}));\n\nexport const StyledMenuFooter = styled('div')(() => ({\n  margin: 0,\n  padding: 0,\n}));\n\nexport const StyledSidebarSwitcher = styled(Button)(({ theme }) => ({\n  height: '100%',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  padding: theme.spacing(2, 2.5),\n  textDecoration: 'none',\n  '& .MuiButton-root.Mui-focusVisible': {\n    textDecoration: 'none',\n  },\n}));\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { Divider, Theme, useMediaQuery, Box, Typography } from '@mui/material';\nimport { ArrowForwardIos, Close } from '@mui/icons-material';\nimport React, { useMemo } from 'react';\nimport { Sidebar, useStore, SidebarProps } from 'react-admin';\nimport { DefaultFooterMenu } from './FooterMenu';\nimport {\n  StyledMenuFooter,\n  StyledMenuContainer,\n  StyledSidebarSwitcher,\n  DRAWER_WIDTH_COLLAPSED,\n  DRAWER_WIDTH_EXPANDED,\n} from './Sidebar.styled';\nimport { CompanyLogo } from './CompanyLogo';\n\ntype OSRaSidebarProps = SidebarProps & {\n  // eslint-disable-next-line react/require-default-props\n  FooterMenu?: React.FC;\n  children: React.ReactNode;\n};\nconst OSRaSidebar = ({ children, FooterMenu = DefaultFooterMenu, ...rest }: OSRaSidebarProps) => {\n  const [open] = useStore('ui.sidebar');\n  const drawerWidth = !open ? DRAWER_WIDTH_COLLAPSED : DRAWER_WIDTH_EXPANDED;\n  return (\n    <Sidebar\n      sx={{\n        height: 'auto',\n        '& .RaSidebar-paper': {\n          backgroundColor: 'background.paper',\n          borderRight: 1,\n          borderRightColor: 'grey.A200',\n          width: drawerWidth,\n        },\n        '& .RaSidebar-fixed': {\n          height: 'calc(100vh - 4.5em)',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          width: drawerWidth,\n        },\n        '& .RaMenuItemLink-icon': {\n          display: 'flex',\n          justifyContent: 'center',\n          marginRight: 1.5,\n        },\n        '& .MuiList-root.RaMenu-closed': {\n          width: drawerWidth,\n        },\n        '& .MuiList-root.RaMenu-open': {\n          width: '100%',\n        },\n        '& .MuiMenuItem-root': {\n          '&:hover': {\n            '& .MuiSvgIcon-root': {\n              color: 'primary.main',\n            },\n            backgroundColor: 'transparent',\n            boxShadow: 'inset 5px 0px 0px #0c7788',\n          },\n          backgroundColor: 'transparent',\n          minHeight: 44,\n          paddingLeft: 1.5,\n        },\n      }}\n      open={open}\n      {...rest}\n    >\n      <SidebarContainer FooterMenu={FooterMenu}>{children}</SidebarContainer>\n    </Sidebar>\n  );\n};\n\ntype SidebarContainerProps = {\n  children: React.ReactNode;\n  FooterMenu: React.FC;\n};\nconst SidebarContainer = ({ children, FooterMenu }: SidebarContainerProps) => {\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('sm'));\n  return (\n    <>\n      {isSmall && <CompanyLogo />}\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          height: { xs: '91%', sm: '100%' },\n        }}\n      >\n        <StyledMenuContainer>{children}</StyledMenuContainer>\n        <Box>\n          <FooterMenu />\n          <StyledMenuFooter>\n            <Divider />\n            <SidebarToggle />\n          </StyledMenuFooter>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst SidebarToggle = () => {\n  const [open, setOpen] = useStore('ui.sidebar', false);\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('sm'));\n  const toggleSidebar = () => setOpen(!open);\n  const Icon = useMemo(() => (open ? <Close /> : <ArrowForwardIos />), [open]);\n  return (\n    <StyledSidebarSwitcher aria-label=\"open drawer\" onClick={toggleSidebar}>\n      {isSmall ? <Close /> : Icon}\n      {open && <Typography>close</Typography>}\n    </StyledSidebarSwitcher>\n  );\n};\n\nexport default OSRaSidebar;\n","import { styled, Box } from '@mui/material';\n\nexport const StyledTitleContainer = styled(Box)(() => ({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'row',\n}));\n","import React, { useEffect, useState, forwardRef } from 'react';\nimport { ArrowBack, Close } from '@mui/icons-material';\nimport { Button, IconButton, Typography } from '@mui/material';\nimport { createPortal } from 'react-dom';\nimport type { NavigationContentProps } from './AppBar';\nimport { StyledTitleContainer } from './Title.styled';\n\n/**\n * The Title component allows users to configure the Appbar options.\n *\n * @param {NavigationClearButtonProps} props.clearButtonProps Add clear button after the title\n * @param {Function} props.clickIconHandler in case you have an icon you can assign an action\n * @param {Boolean} props.mode To de defined if we need this or not\n * @param {String | ReactNode} props.title title of the page\n * @param {TypographyProps} props.titleProps props of the title, accessible when title is a string\n *\n * @example\n *\n * const MyPage = props => {\n *   return (\n      <Title\n        clearAllButtonProps={{\n          label: 'Clear all',\n          onClick: () => { console.log('clear something'),\n        }}\n        clickIconHandler={() => { console.log('close something')} }\n        mode=\"Navigation\"\n        title={<Typography variant=\"body2\">Custom title</Typography>}\n      />\n *   );\n *};\n *\n */\nexport const Title = forwardRef(\n  (\n    { clearButtonProps, clickIconHandler, mode, title, titleProps }: NavigationContentProps,\n    ref\n  ) => {\n    const Icon = mode === 'Navigation' ? ArrowBack : Close;\n    const [container, setContainer] = useState<HTMLElement | null>(null);\n\n    useEffect(() => {\n      const portal = document.getElementById('portal-admin-actions');\n      if (portal) {\n        setContainer(portal);\n      }\n    }, []);\n\n    if (!container) return null;\n\n    return createPortal(\n      <>\n        {clickIconHandler && (\n          <IconButton\n            data-testid={mode}\n            onClick={clickIconHandler}\n            nonce={undefined}\n            touchRippleRef={undefined}\n          >\n            <Icon />\n          </IconButton>\n        )}\n        {typeof title === 'string' ? (\n          <StyledTitleContainer ref={ref}>\n            <Typography id=\"platform-admin-title\" variant=\"h5\" nonce={undefined} {...titleProps}>\n              {title}\n            </Typography>\n            {clearButtonProps && (\n              <Button color=\"primary\" {...clearButtonProps}>\n                {clearButtonProps.label}\n              </Button>\n            )}\n          </StyledTitleContainer>\n        ) : (\n          title\n        )}\n      </>,\n      container\n    );\n  }\n);\n","import { createTheme } from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport { defaultTheme as RADefaultTheme } from 'react-admin';\nimport { merge } from 'lodash';\n\nconst mergedTheme = merge({}, RADefaultTheme);\nexport const theme = createTheme({\n  ...mergedTheme,\n  palette: {\n    ...mergedTheme.palette,\n    background: {\n      default: grey[100],\n    },\n  },\n});\n","import React from 'react';\nimport { useLogin } from 'react-admin';\nimport { LoginPage } from '../pages/LoginPage';\n\ntype HandleLogin = {\n  url: string;\n  emailAddress: string;\n  password: string;\n};\nexport const RALogin = () => {\n  const onLogin = useLogin();\n\n  const handleLogin = ({ url, emailAddress, password }: HandleLogin) => {\n    return onLogin({ url, emailAddress, password });\n  };\n  return <LoginPage onLogin={handleLogin} />;\n};\n","import React from 'react';\nimport { useLogin } from 'react-admin';\nimport { useLocation } from 'react-router-dom';\nimport { ResetPasswordPage } from '../pages';\n\ntype HandleResetPassword = {\n  staticPassword: string;\n};\nexport const RAResetPassword = () => {\n  const onLogin = useLogin();\n  const location = useLocation();\n\n  const handleLogin = ({ staticPassword }: HandleResetPassword) => {\n    const { emailAddress, password } = location.state;\n    return onLogin({ emailAddress, password, staticPassword });\n  };\n  return <ResetPasswordPage onLogin={handleLogin} />;\n};\n","/* eslint-disable camelcase,@typescript-eslint/no-use-before-define */\nimport { fetchUtils, Options } from 'react-admin';\nimport { ospDataProvider } from '../dataProvider';\n\n/**\n * @todo revisit the AuthProvider try to refactor it\n * - detach useAuthActions and useAuthState from the data provider\n * - remove each event to smaller files\n * - getUserPermissions should work with reset-password workflow\n * today we need to use AuthProvider to store the permissions.\n * - improve the way we choose the platform domain variable\n * - improve the service api calls\n *\n *  @todo remove this eslint clause in the next sprint\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const useAuthProvider = ({ apiUrl }) => {\n  const authProvider = {\n    login: async () => {\n      try {\n        return Promise.resolve();\n      } catch (e) {\n        // eslint-disable-next-line prefer-promise-reject-errors\n        return Promise.reject({ message: e.message, ...e });\n      }\n    },\n    logout: () => {\n      sessionStorage.clear();\n      return Promise.resolve();\n    },\n    checkAuth: () => {\n      const publicRoutes = ['reset-password', 'complete-profile'];\n      if (\n        publicRoutes.filter((route) => window.location.pathname.includes(route))\n          .length\n      ) {\n        return Promise.resolve();\n      }\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.resolve();\n    },\n    checkError: () => {\n      return Promise.reject();\n    },\n    getIdentity: async () => {\n      return Promise.resolve();\n    },\n    getPermissions: async () => {\n      return Promise.resolve();\n    },\n  };\n\n  const fetchJson = (url: string, options = {} as Options) => {\n    // eslint-disable-next-line no-param-reassign\n    options.user = {\n      authenticated: true,\n      token: `foo`,\n    };\n    return fetchUtils.fetchJson(url, options);\n  };\n\n  const dataProvider = ospDataProvider(apiUrl, fetchJson);\n\n  return { authProvider, dataProvider };\n};\n","import React, { PropsWithChildren } from 'react';\nimport { CreateBase, Form } from 'react-admin';\nimport type { CreateFormBuilderType } from './types';\n\nexport const CreateFormBuilder: React.FC<PropsWithChildren<CreateFormBuilderType>> = React.memo(\n  ({ children, createBaseProps, formProps }) => {\n    return (\n      <CreateBase {...createBaseProps}>\n        <Form {...formProps}>{children}</Form>\n      </CreateBase>\n    );\n  }\n);\n","import { Menu, styled, MenuItem } from '@mui/material';\n\nexport const StyledIcon = {\n  height: 20,\n  resizeMode: 'contain',\n};\n\nexport const StyledMenu = styled(Menu)(() => ({\n  '.MuiMenu-list': {\n    padding: 0,\n  },\n  '.MuiMenu-paper': {\n    width: 136,\n    padding: 0,\n    boxShadow:\n      '0px 0px 1px rgba(0, 0, 0, 0.2), 0px 2px 2px -1px rgba(0, 0, 0, 0.15), 0px 3px 15px -1px rgba(0, 0, 0, 0.1)',\n  },\n}));\n\nexport const StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  display: 'flex',\n  padding: theme.spacing(2),\n}));\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { StyledMenu } from './ContextMenuField.styled';\nimport dataIds from './dataIds';\nimport type { ContextMenuFieldProps } from './types';\n\nexport const ContextMenuField = ({\n  AnchorComponent,\n  anchorOrigin = {\n    vertical: 40,\n    horizontal: 10,\n  },\n  transformOrigin = {\n    vertical: 'top',\n    horizontal: 'right',\n  },\n  render,\n  source,\n}: ContextMenuFieldProps) => {\n  const record = useRecordContext();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      {React.cloneElement(AnchorComponent, { onClick: handleClick })}\n      <StyledMenu\n        elevation={0}\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        keepMounted\n        onClose={handleClose}\n        anchorOrigin={anchorOrigin}\n        transformOrigin={transformOrigin}\n        data-testid={dataIds.ContextMenu.id}\n      >\n        {render({ record, source, handleClose })}\n      </StyledMenu>\n    </>\n  );\n};\n","import { Icon as MuiIcon, Typography } from '@mui/material';\nimport React from 'react';\nimport { StyledIcon, StyledMenuItem } from './ContextMenuField.styled';\nimport type { ContextMenuFieldItemProps } from './types';\n\nexport const ContextMenuItemField = ({\n  icon,\n  title,\n  onClick,\n  ...rest\n}: ContextMenuFieldItemProps) => {\n  return (\n    <StyledMenuItem\n      onClick={() => {\n        onClick();\n      }}\n      key={title}\n      {...rest}\n    >\n      {icon && <MuiIcon component={icon} sx={{ ...StyledIcon, marginRight: 2 }} />}\n      <Typography nonce={undefined}>{title}</Typography>\n    </StyledMenuItem>\n  );\n};\n","export default {\n  ContextMenu: {\n    id: 'ContextMenu',\n  },\n};\n","import { styled, TextField as TextInput } from '@mui/material';\n\nexport const StyledTextInput = styled(TextInput)(({ theme }) => ({\n  height: '100%',\n  padding: theme.spacing(0.5),\n  borderRadius: theme.spacing(1),\n}));\n","import React, { useMemo } from 'react';\nimport { useInput } from 'react-admin';\nimport type { TextInputType } from './types';\nimport { StyledTextInput } from './TextInput.styled';\nimport DataIds from './dataIds';\n\nexport const TextInput: React.FC<TextInputType> = React.memo((props) => {\n  const { fullWidth, id, label, onBlur, onChange, ...rest } = props;\n  const {\n    field,\n    fieldState: { invalid, isDirty, isTouched },\n    formState: { isSubmitted },\n    isRequired,\n  } = useInput({\n    // Pass the event handlers to the hook but not the component as the field property already has them.\n    // useInput will call the provided onChange and onBlur in addition to the default needed by react-hook-form.\n    onBlur,\n    onChange,\n    ...props,\n  });\n\n  const errorStateMatcher = useMemo<boolean>(\n    () => invalid && (isDirty || isTouched || isSubmitted),\n    [invalid, isDirty, isSubmitted, isTouched]\n  );\n\n  return (\n    <StyledTextInput\n      {...field}\n      data-testid={DataIds.TextInput.id}\n      error={errorStateMatcher}\n      required={isRequired}\n      {...rest}\n    />\n  );\n});\n","export default {\n  TextInput: {\n    FormFieldHelperText: {\n      id: 'FormFieldHelperText-TextField',\n    },\n    FormFieldLabel: {\n      id: 'FormFieldLabel-TextField',\n    },\n    TextInput: {\n      id: 'TextInput-TextField',\n    },\n    id: 'TextInput',\n  },\n};\n","import pluralize from 'pluralize';\nimport { camelCase } from './utils';\n\nexport const sanitizeResourceResult = (resource) => camelCase(resource);\n\n// TODO: Figure out if we should try both '{resource}Id' and '{resource}Uuid' by default\nexport const sanitizeResourceId = (resource) =>\n  `${pluralize.singular(sanitizeResourceResult(resource))}Id`;\n\n// A cached version of these mappings would be faster.\n// We don't expect them to change as part of normal operations but,\n// It makes it harder to test and, with MFEs, there might be some conflicts.\nexport function ospDataMapper(\n  resource: string,\n  attributesMapper: { id?: string; results?: string } = {}\n) {\n  const attrMap = {\n    id: sanitizeResourceId(resource),\n    results: sanitizeResourceResult(resource),\n    ...attributesMapper,\n  };\n\n  const remoteToLocal = (remote) => {\n    const mapped = { ...remote };\n    if (attrMap.id in remote) {\n      mapped.id = remote[attrMap.id];\n      delete mapped[attrMap.id];\n    }\n    return mapped;\n  };\n\n  const remoteResultsToLocal = (remote) => {\n    return remote[attrMap.results].map(remoteToLocal);\n  };\n\n  const localToRemote = (local) => {\n    const mapped = { ...local };\n    // Because localToRemote can be used in create and update, it may not contain an id\n    if ('id' in local) {\n      mapped[attrMap.id] = local.id;\n      delete mapped.id;\n    }\n    return mapped;\n  };\n\n  return { remoteToLocal, remoteResultsToLocal, localToRemote };\n}\n","import { fetchUtils, DataProvider } from 'react-admin';\nimport { ospDataMapper } from './ospDataMapper';\n\nconst stringify = (query) => new URLSearchParams(query).toString();\n\nexport function ospDataProvider(\n  apiUrl,\n  httpClient = fetchUtils.fetchJson,\n  attributesMapper = {}\n): DataProvider {\n  const urls = {\n    // Remove any bad values from the query object\n    cleanQuery: (query) =>\n      Object.entries(query).reduce(\n        (q, [k, v]) => (!v && typeof v === 'number' && v !== 0 ? q : { ...q, [k]: v }),\n        {}\n      ),\n    querystring: (query) => (query ? `?${stringify(urls.cleanQuery(query))}` : ''),\n    collection: (resource, query = null) => `${apiUrl}/${resource}${urls.querystring(query)}`,\n    single: (resource, id, query = null) => `${apiUrl}/${resource}/${id}${urls.querystring(query)}`,\n  };\n\n  return {\n    getList(resource, params) {\n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n      const query = {\n        ...fetchUtils.flattenObject(params.filter),\n        sort: field,\n        dir: order?.toLowerCase(),\n        offset: (page - 1) * perPage,\n        limit: perPage,\n      };\n\n      return httpClient(urls.collection(resource, query)).then(({ json }) => ({\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        data: ospDataMapper(resource, attributesMapper).remoteResultsToLocal(json),\n        total: json.total,\n      }));\n    },\n\n    getOne(resource, params) {\n      return httpClient(urls.single(resource, params.id)).then(({ json }) => ({\n        data: ospDataMapper(resource, attributesMapper).remoteToLocal(json),\n      }));\n    },\n\n    getMany(resource, params) {\n      return Promise.all(\n        params.ids.map((id) => this.getOne(resource, { id, meta: params.meta }))\n      ).then((results) => ({\n        data: results.map((r) => r.data),\n      }));\n    },\n\n    getManyReference(resource, params) {\n      const { target, id, filter, ...others } = params;\n      return this.getList(resource, {\n        ...others,\n        filter: {\n          ...filter,\n          [target]: id,\n        },\n      });\n    },\n\n    create(resource, params) {\n      const mapper = ospDataMapper(resource, attributesMapper);\n      return httpClient(urls.collection(resource), {\n        method: 'POST',\n        body: JSON.stringify(mapper.localToRemote(params.data)),\n      }).then(({ json }) => ({\n        // The exact manipulation we do here depends on the final API design\n        data: mapper.remoteToLocal(json),\n      }));\n    },\n\n    update(resource, params) {\n      const mapper = ospDataMapper(resource, attributesMapper);\n      return httpClient(urls.single(resource, params.id), {\n        method: 'PUT',\n        body: JSON.stringify(mapper.localToRemote(params.data)),\n      }).then(({ json }) => ({ data: mapper.remoteToLocal(json) }));\n    },\n\n    // json-server doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n    updateMany(resource, params) {\n      const { ids, ...rest } = params;\n      return Promise.all(ids.map((id) => this.update(resource, { id, ...rest }))).then(\n        (responses) => ({ data: responses.map(({ data }) => data.id) })\n      );\n    },\n\n    delete(resource, params) {\n      return httpClient(urls.single(resource, params.id), {\n        method: 'DELETE',\n      }).then(({ json }) => {\n        return json\n          ? { data: ospDataMapper(resource, attributesMapper).remoteToLocal(json) }\n          : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            ({} as any);\n      });\n    },\n\n    // json-server doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany(resource, params) {\n      const { ids, ...rest } = params;\n      return Promise.all(ids.map((id) => this.delete(resource, { id, ...rest }))).then(\n        (responses) => ({ data: responses.map(({ data }) => data.id) })\n      );\n    },\n  };\n}\n","export const camelCase = (input) => {\n  return input.replace(/-(.)/g, (match, group1) => {\n    return group1.toUpperCase();\n  });\n};\n","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport type { I18nProvider } from 'react-admin';\n// @todo add other default messages potentially\nimport enReactAdminMessages from 'ra-language-english';\nimport frReactAdminMessages from 'ra-language-french';\nimport type { IntlMessage } from '../types';\n\n/**\n * Create i18n provider instance\n * @param {string} initialLocale default locale of a given application\n * @param {object} messages list of translation messages\n */\nexport const createOspI18nProvider = (\n  initialLocale: string,\n  { en, fr, ...messages }: IntlMessage\n): I18nProvider => {\n  const polyglotMessages = {\n    ...messages,\n    en: {\n      ...enReactAdminMessages,\n      ...en,\n    },\n    fr: {\n      ...frReactAdminMessages,\n      ...fr,\n    },\n  };\n  return polyglotI18nProvider(\n    (locale) => polyglotMessages[locale],\n    initialLocale,\n    Object.keys(messages)\n  );\n};\n","/* eslint-disable camelcase */\nimport type { User, TokenRequest, AuthResponse, UserPool, TokenResponse } from '../shared/types';\nimport type { DomainType, LoginPayload, RequestOptions, UserPayload } from './types';\n\nconst apiNamespace = '/api';\nconst baseHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n};\n\nconst executeFetch = async (request: Request) => {\n  try {\n    const response = await fetch(request);\n    if (!response.ok) {\n      const error = await response.json();\n      return Promise.reject(error);\n    }\n    return await response.json();\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\nexport const getUserPool = (\n  { url }: DomainType,\n  { domain = '' }: RequestOptions\n): Promise<UserPool> => {\n  const request = new Request(`${domain}${apiNamespace}/subscriptions/v1/login-info/${url}`, {\n    method: 'GET',\n    headers: new Headers({ ...baseHeaders }),\n  });\n  return executeFetch(request);\n};\n\nexport const getUserById = (\n  { accountId, realmId, userId }: UserPayload,\n  { headers, domain = '' }: RequestOptions\n): Promise<User> => {\n  const request = new Request(\n    `${domain}${apiNamespace}/users/v1/accounts/${accountId}/realms/${realmId}/users/${userId}`,\n    {\n      method: 'GET',\n      headers: new Headers({ ...baseHeaders, ...headers }),\n    }\n  );\n  return executeFetch(request);\n};\n\nexport const login = (\n  { emailAddress, password, staticPassword, accountUuid, realmId, clientId }: LoginPayload,\n  { domain = '' }: RequestOptions\n): Promise<AuthResponse> => {\n  const encodedB64 = btoa(clientId);\n  const loginReq = new Request(\n    // it doest need the /api variable, this back end service is not normalized\n    `${domain}/authentication/v1/accounts/${accountUuid}/realms/${realmId}/users/${emailAddress}/login`,\n    {\n      method: 'POST',\n      headers: new Headers({\n        ...baseHeaders,\n        Authorization: `Basic ${encodedB64}`,\n      }),\n      body: JSON.stringify({\n        credentials: {\n          passKey: password,\n          staticPassword,\n        },\n      }),\n    }\n  );\n  return executeFetch(loginReq);\n};\n\nexport const tokenExchange = (\n  { accessToken, idToken, solutionInstanceId, scope = '', params = {} }: TokenRequest,\n  { domain = '' }: RequestOptions = {} as RequestOptions\n): Promise<TokenResponse> => {\n  /*\n   * we should review the way that this call is being made, querystring is not\n   * a good pattern for a post call, instead it should be a POST body.\n   * Please validate it with an architect, create a ticket to refactor.\n   * consider replicate the same logic to the Dashboard project\n   *\n   * today the current RFC6749 of exchange token says that querystring is\n   * the safest way of doing OAUTH integrations.\n   * for more information : https://datatracker.ietf.org/doc/html/rfc6749#section-8.3\n   *\n   * set of constants needed for exchange token workflow\n   * this may change in a future since this service will manage\n   * multiple types of workflows\n   */\n\n  const exchangeTokenConstants = {\n    grant_type: 'urn:ietf:params:oauth:grant-type:token-exchange',\n    client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n    subject_token_type: 'urn:ietf:params:oauth:token-type:id_token',\n  };\n  const { grant_type, client_assertion_type, subject_token_type } = exchangeTokenConstants;\n  const queryString = {\n    grant_type,\n    client_assertion_type,\n    subject_token_type,\n    client_assertion: accessToken,\n    subject_token: idToken,\n    ospn_sol_inst: solutionInstanceId,\n    ...(scope.length > 0 && { scope }),\n    ...params,\n  };\n  const qs = new URLSearchParams(queryString);\n  const url = `/tokens/v1/oauth2/token?${qs}`;\n\n  const request = new Request(`${domain}${apiNamespace}${url}`, {\n    method: 'POST',\n    headers: new Headers({ ...baseHeaders }),\n  });\n  return executeFetch(request);\n};\n\nexport const getPermissions = (\n  { domain = '', headers = {} }: RequestOptions = {} as RequestOptions\n) => {\n  const request = new Request(`${domain}${apiNamespace}/tokens/v1/permissions`, {\n    method: 'GET',\n    headers: new Headers({ ...baseHeaders, ...headers }),\n  });\n  return executeFetch(request);\n};\n","export const defaultValues = {\n  emailAddress: '',\n  password: '',\n};\n\n// 14 chars, 1 number, 1 special char min.\nexport const PASSWORD_REGEX =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[~!@#$%^&*_\\-+=`|(){}[\\]:;\"'<>,.?/])\\S{14,98}$/;\n\nexport const MAX_LENGTH = 255;\nexport const MAX_LENGTH_PASSWORD = 98;\nexport const MIN_LENGTH_PASSWORD = 14;\n\nexport const errorCodes = {\n  VALIDATION_FAILED_NEW_PASSWORD_MISSING: 'platform.users.login.new-password-null',\n  CONFLICT_UNAUTHORIZED_USER: 'platform.users.login.unauthorized-user',\n};\n"],"names":["styled","width","height","display","justifyContent","alignItems","Paper","_ref","flexDirection","padding","theme","spacing","OssUiFormField","TextField","marginBottom","errorMessage","helperMessage","label","children","props","_objectWithoutProperties","_excluded","React","_extends","id","fullWidth","StyledTextInput","borderRadius","InputField","forwardRef","ref","testId","_ref$maxLength","maxLength","MAX_LENGTH","inputProps","FormField","slotProps","undefined","slots","inputRef","autoComplete","status","_objectSpread","dataIds","ControlledInputField","_ref2","name","_ref2$errorMessage","_excluded2","control","useFormContext","Controller","render","_ref3","_ref3$field","field","onBlur","onChange","_ref3$fieldState","fieldState","error","isTouched","message","StyledIconButton","IconButton","backgroundColor","_ref$testId","MAX_LENGTH_PASSWORD","formatMessage","useIntl","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","_ref2$field","_ref2$fieldState","type","endAdornment","InputAdornment","position","disableFocusRipple","disableRipple","disableTouchRipple","onClick","messages","VisibilityOff","concat","Visibility","PasswordField","FieldIconButton","defineMessages","passwordVisibleAriaLabel","defaultMessage","passwordHiddenAriaLabel","StyledPaper","_defineProperty","margin","breakpoints","up","FormContainer","StyledTypography","Typography","_ref4","fontSize","fontWeight","marginTop","StyledBox","Box","_ref5","textTransform","StyledButtonProgress","ButtonProgress","_ref6","LoginForm","onLogin","redirect","useRedirect","loading","setLoading","_useState3","_useState4","setError","_useFormContext","isValid","formState","getValues","flex","component","color","Divider","Button","variant","disabled","startIcon","LoginIcon","evt","preventDefault","_getValues","_getValues2","emailAddressInput","password","emailAddress","toLowerCase","e","errorCode","errorCodes","StatusCodes","methods","useForm","defaultValues","mode","FormProvider","LoginPage","email","submitButton","authError","title","isRequired","minCharacters","emailAddressError","passwordError","login","forgotPassword","accountLocked","invalidLogin","internalError","ResetPasswordPage","setAuthError","location","useLocation","sx","value","state","readOnly","Save","confirmPassword","staticPassword","then","window","pathname","includes","newPassword","doNotMatch","resetPasswordButton","StyledRoot","StyledMain","flexGrow","palette","background","inputGlobalStyles","GlobalStyles","styles","textSizeAdjust","OSThemeProvider","ThemeProvider","CssBaseline","ContextProviders","basename","locale","AppLogo","externalCluster","BrowserRouter","IntlProvider","LayoutProvider","AdminContext","apiUrl","dataProvider","i18nProvider","_ref3$messages","_ref3$locale","dashboard","layout","_ref3$externalCluster","_ref3$requireAuth","requireAuth","_useAuthProvider","useAuthProvider","authProvider","defaultDataProvider","defaultI18nProvider","createOspI18nProvider","Admin","loginPage","OSRaLogin","OSRaLayout","OSAdmin","_ref4$basename","_ref4$externalCluster","_ref4$requireAuth","_ref4$locale","_ref4$adminProps","adminProps","_ref4$name","_ref4$apiUrl","_ref4$theme","defaultTheme","_ref4$reactIntl","reactIntl","_ref4$AppLogo","Logo","StyledAppBar","AppBar","common","white","text","primary","borderBottom","grey","A200","marginLeft","boxShadow","StyledPortalAdminTitle","TextInput","minWidth","borderColor","outline","main","StyledContentBox","cursor","StyledLogoAndTitleSection","StyledMenuItem","MenuItem","minHeight","StyledToolbar","Toolbar","paddingLeft","isSmall","useMediaQuery","down","Children","MobileMenu","CompanyLogo","ApplicationBarContextMenu","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","role","MoreVert","Menu","anchorOrigin","horizontal","vertical","open","onClose","PaperProps","elevation","paddingTop","paddingBottom","transformOrigin","MenuItems","options","_","map","idx","icon","menuItemProps","key","ListItemIcon","ListItemText","StyledLogoWrapper","StyledApplicationName","StyledLogoContainer","light","marginRight","paddingRight","borderRight","zIndex","drawer","transition","transitions","create","easing","sharp","duration","enteringScreen","mixins","toolbar","_useStore","useStore","isSidebarOpen","_useContext","useContext","LayoutContext","DRAWER_WIDTH_EXPANDED","DRAWER_WIDTH_COLLAPSED","xs","sm","FooterMenu","MenuList","Item","_ref2$to","to","primaryText","leftIcon","rest","translate","useTranslate","linkProps","Link","renderItem","MuiMenuItem","DefaultFooterMenu","RAUserMenu","PlatformLayout","Layout","appBar","OSRaAppBar","sidebar","OSRaSidebar","overflowY","createContext","useMemo","Provider","List","actionButtons","contextMenu","debounce","disableAuthentication","disableSyncWithLocation","exporter","filter","filterDefaultValues","perPage","queryOptions","sort","storeKey","resource","useResourceContext","getResourceLabel","useGetResourceLabel","defaultTitle","ListBase","Title","ListToolbar","ListView","inputClass","className","container","setContainer","useEffect","portal","document","getElementById","createPortal","startAdornment","Search","isArray","buttonProps","dark","_useStore2","setIsSidebarOpen","StyledMenuContainer","Backdrop","StyledMenuFooter","StyledSidebarSwitcher","textDecoration","SidebarContainer","SidebarToggle","_useStore3","_useStore4","setOpen","Icon","Close","ArrowForwardIos","_ref$FooterMenu","drawerWidth","Sidebar","borderRightColor","StyledTitleContainer","clearButtonProps","clickIconHandler","titleProps","ArrowBack","nonce","touchRippleRef","mergedTheme","merge","RADefaultTheme","createTheme","default","RALogin","useLogin","url","RAResetPassword","_location$state","_getPermissions","_getIdentity","_login","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","Promise","resolve","t0","reject","stop","apply","arguments","logout","sessionStorage","clear","checkAuth","route","length","checkError","getIdentity","_callee2","_context2","getPermissions","_callee3","_context3","ospDataProvider","user","authenticated","token","fetchUtils","CreateFormBuilder","createBaseProps","formProps","CreateBase","Form","StyledIcon","resizeMode","StyledMenu","ContextMenuField","AnchorComponent","_ref$anchorOrigin","_ref$transformOrigin","source","record","useRecordContext","_React$useState","_React$useState2","Boolean","keepMounted","ContextMenuItemField","MuiIcon","ContextMenu","_useInput","useInput","_useInput$fieldState","invalid","isDirty","isSubmitted","errorStateMatcher","DataIds","required","FormFieldHelperText","FormFieldLabel","sanitizeResourceResult","camelCase","sanitizeResourceId","pluralize","ospDataMapper","attributesMapper","attrMap","results","remoteToLocal","remote","mapped","remoteResultsToLocal","localToRemote","local","stringify","query","URLSearchParams","toString","httpClient","urls","cleanQuery","Object","entries","reduce","q","k","v","querystring","collection","single","getList","params","_params$pagination","pagination","page","_params$sort","order","dir","offset","limit","json","data","total","getOne","getMany","_this","all","ids","meta","r","getManyReference","target","others","this","mapper","method","body","JSON","update","updateMany","_this2","responses","_ref7","_ref8","deleteMany","_this3","_excluded3","_ref9","input","replace","match","group1","toUpperCase","initialLocale","en","fr","polyglotMessages","enReactAdminMessages","frReactAdminMessages","polyglotI18nProvider","keys","baseHeaders","Accept","executeFetch","request","response","fetch","sent","ok","_x","tokenExchange","accessToken","idToken","solutionInstanceId","_ref8$scope","scope","_ref8$params","_ref9$domain","domain","queryString","grant_type","client_assertion_type","subject_token_type","client_assertion","subject_token","ospn_sol_inst","qs","Request","headers","Headers","VALIDATION_FAILED_NEW_PASSWORD_MISSING","CONFLICT_UNAUTHORIZED_USER"],"sourceRoot":""}